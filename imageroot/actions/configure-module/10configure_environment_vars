#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import secrets
import base64
# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

app_id = secrets.token_hex(12)
phrase = secrets.token_bytes(32)
pfx = base64.b64encode(phrase)
#This is specific to you module, so you need to change it accordingly.
# we read a json stdin {"vars1":true, "var2":"foo", "vars3": 3} and we writ it to .config/state/environment
# Upper case to set environment variable and minor case to read from stdin

PUBLIC_URL = data.get('host', '')
GENERATE_SOURCEMAP = data.get('GENERATE_SOURCEMAP', 'false')
REACT_APP_SERVERURL = data.get('REACT_APP_SERVERURL', '')
REACT_APP_APPID = data.get('REACT_APP_APPID', app_id)
REACT_APP_GTM = data.get('REACT_APP_GTM', '')
# Open sign Frontend
# Frontend Configuration
frontend_config = {
    "PUBLIC_URL": f'{PUBLIC_URL}',
    "GENERATE_SOURCEMAP": GENERATE_SOURCEMAP,
    "REACT_APP_SERVERURL": f'https://server.{PUBLIC_URL}/api/app',
    "REACT_APP_APPID": REACT_APP_APPID,
    "REACT_APP_GTM": REACT_APP_GTM,
}
agent.write_envfile("frontend.env", frontend_config)

APP_ID = data.get('APP_ID', app_id)
appName = data.get('appName', 'NS8 Open Sign Server')
MASTER_KEY = data.get('MASTER_KEY', app_id)
MONGODB_URI = data.get('MONGODB_URI', '')
PARSE_MOUNT = data.get('PARSE_MOUNT', '/app')
SERVER_URL = data.get('SERVER_URL', '')

# Backend Configuration
backend_config = {
    "APP_ID": APP_ID,
    "appName": appName,
    "MASTER_KEY": MASTER_KEY,
    "MONGODB_URI": MONGODB_URI,
    "PARSE_MOUNT": PARSE_MOUNT,
    "SERVER_URL": SERVER_URL,
}
agent.write_envfile('backend.env', backend_config)
DO_SPACE = data.get('DO_SPACE', '')
DO_ENDPOINT = data.get('DO_ENDPOINT', '')
DO_BASEURL = data.get('DO_BASEURL', '')
DO_ACCESS_KEY_ID = data.get('DO_ACCESS_KEY_ID', '')
DO_SECRET_ACCESS_KEY = data.get('DO_SECRET_ACCESS_KEY', '')
DO_REGION = data.get('DO_REGION', '')
USE_LOCAL = data.get('USE_LOCAL', '')
# Storage Configuration
storage_config = {
    "DO_SPACE": DO_SPACE,
    "DO_ENDPOINT": DO_ENDPOINT,
    "DO_BASEURL": DO_BASEURL,
    "DO_ACCESS_KEY_ID": DO_ACCESS_KEY_ID,
    "DO_SECRET_ACCESS_KEY": DO_SECRET_ACCESS_KEY,
    "DO_REGION": DO_REGION,
    "USE_LOCAL": USE_LOCAL,
}

agent.write_envfile("storage.env", storage_config)
# SMTP Configuration
rdb = agent.redis_connect(use_replica=True)
smtp_settings = agent.get_smarthost_settings(rdb)

## Set the default values
SMTP_HOST=smtp_settings['host']
# OPTIONAL: Defines the port to use for sending emails.
SMTP_PORT=smtp_settings['port']
# OPTIONAL: Defines the username to use with the SMTP server.
SMTP_USERNAME=smtp_settings['username']
# OPTIONAL: Defines the password to use with the SMTP server.
SMTP_PASSWORD=smtp_settings['password']
SMTP_FROM_NAME=f'"Documenso" <{smtp_settings["username"]}>'
# REQUIRED: Defines the email address to use as the from address.
SMTP_FROM_ADDRESS=smtp_settings['username']
SMTP_ENCRYPTION=smtp_settings['tls_verify']
SMTP_ENABLED=smtp_settings['enabled']

MAILGUN_API_KEY = data.get('MAILGUN_API_KEY', '')
MAILGUN_DOMAIN = data.get('MAILGUN_DOMAIN', '')
MAILGUN_SENDER = data.get('MAILGUN_SENDER', '')

# Email Configuration
email_config = {
    "MAILGUN_API_KEY": MAILGUN_API_KEY,
    "MAILGUN_DOMAIN": MAILGUN_DOMAIN,
    "MAILGUN_SENDER":MAILGUN_SENDER,
    "SMTP_ENABLE": SMTP_ENABLED,
    "SMTP_HOST": SMTP_HOST,
    "SMTP_PORT": SMTP_PORT,
    "SMTP_USER_EMAIL":f'{SMTP_USERNAME}',
    "SMTP_PASS": f'{SMTP_PASSWORD}',
}

agent.write_envfile("email.env", email_config)

PFX_BASE64 = data.get('PFX_BASE64', pfx)
PASS_PHRASE = data.get('PASS_PHRASE', phrase)
# PFX Configuration
pfx_config = {
    "PFX_BASE64": PFX_BASE64,
    "PASS_PHRASE": PASS_PHRASE,
}
agent.write_envfile('pfx.env', pfx_config)
# Make sure everything is saved inside the environment file
# just before starting systemd unit
#agent.dump_env()

#DATABASE CONFIGURATIONS
MONGO_INITDB_ROOT_USERNAME = data.get('MONGO_INITDB_ROOT_USERNAME', 'root')
MONGO_INITDB_ROOT_PASSWORD = data.get('MONGO_INITDB_ROOT_PASSWORD', 'Op3nSignNS8')
MONGO_INITDB_DATABASE = data.get('MONGO_INITDB_DATABASE', 'opensign')
MONGO_INITDB_USERNAME = data.get('MONGO_INITDB_USERNAME', 'opensign')
MONGO_INITDB_PASSWORD = data.get('MONGO_INITDB_PASSWORD', 'OpensignNS8')
MONGO_HOST = data.get('MONGO_HOST', 'localhost')
MONGO_PORT = data.get('MONGO_PORT', '27017')

mongo_config = {
    "MONGO_INITDB_ROOT_USERNAME": MONGO_INITDB_USERNAME,
    "MONGO_INITDB_ROOT_PASSWORD": f'{MONGO_INITDB_ROOT_PASSWORD}',
    "MONGO_INITDB_DATABASE": MONGO_INITDB_DATABASE,
    "MONGO_INITDB_USERNAME": MONGO_INITDB_USERNAME,
    "MONGO_INITDB_PASSWORD": f'{MONGO_INITDB_PASSWORD}',
    "MONGO_HOST": MONGO_HOST,
    "MONGO_PORT": MONGO_PORT,
}
agent.write_envfile("mongo.env", mongo_config)